{"ast":null,"code":"var _jsxFileName = \"/home/qadmin/GitHub/Q./src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Get initial session\n    const getSession = async () => {\n      var _session$user;\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      setLoading(false);\n    };\n    getSession();\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      var _session$user2;\n      setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signUp = async (email, password) => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        emailRedirectTo: `${window.location.origin}/login`,\n        data: {\n          email_confirmed: true\n        }\n      }\n    });\n\n    // If signup is successful, automatically sign in the user\n    if (data.user && !error) {\n      const {\n        data: signInData,\n        error: signInError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (signInError) {\n        return {\n          data: null,\n          error: signInError\n        };\n      }\n      return {\n        data: signInData,\n        error: null\n      };\n    }\n    return {\n      data,\n      error\n    };\n  };\n  const signIn = async (email, password) => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    return {\n      data,\n      error\n    };\n  };\n  const signOut = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    return {\n      error\n    };\n  };\n  const resetPassword = async email => {\n    const {\n      data,\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    return {\n      data,\n      error\n    };\n  };\n  const value = {\n    user,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","getSession","_session$user","data","session","auth","subscription","onAuthStateChange","event","_session$user2","unsubscribe","signUp","email","password","error","options","emailRedirectTo","window","location","origin","email_confirmed","signInData","signInError","signInWithPassword","signIn","signOut","resetPassword","resetPasswordForEmail","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/qadmin/GitHub/Q./src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { supabase } from '../lib/supabase'\n\nconst AuthContext = createContext({})\n\nexport const useAuth = () => {\n  return useContext(AuthContext)\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get initial session\n    const getSession = async () => {\n      const { data: { session } } = await supabase.auth.getSession()\n      setUser(session?.user ?? null)\n      setLoading(false)\n    }\n\n    getSession()\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        setUser(session?.user ?? null)\n        setLoading(false)\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const signUp = async (email, password) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        emailRedirectTo: `${window.location.origin}/login`,\n        data: {\n          email_confirmed: true\n        }\n      }\n    });\n    \n    // If signup is successful, automatically sign in the user\n    if (data.user && !error) {\n      const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n      \n      if (signInError) {\n        return { data: null, error: signInError };\n      }\n      \n      return { data: signInData, error: null };\n    }\n    \n    return { data, error };\n  }\n\n  const signIn = async (email, password) => {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    })\n    return { data, error }\n  }\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut()\n    return { error }\n  }\n\n  const resetPassword = async (email) => {\n    const { data, error } = await supabase.auth.resetPasswordForEmail(email)\n    return { data, error }\n  }\n\n  const value = {\n    user,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    resetPassword,\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}